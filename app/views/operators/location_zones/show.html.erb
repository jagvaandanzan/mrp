<% provide :head_tags do %>
  <script type="text/javascript"
          src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_MAP_KEY'] %>"></script>
<% end %>

<div class="content-wrapper">
  <%= render 'layouts/flash_message' %>
  <section class="content-header align-left padding-15">
    <h1> <%= t('activerecord.models.location_zone') %> </h1>
  </section>

  <div class="action-buttons">
    <% if can? :manage, LocationZone %>
      <%= link_to t('controls.button.edit'), edit_operators_location_zone_path(@location_zone), class: 'btn btn-info' %>
      <%= link_to t('controls.button.delete'), operators_location_zone_path(@location_zone), method: :delete, data: {confirm: t('are_you_sure')}, class: 'btn btn-danger' %>
    <% end %>
    <%= link_to t('titles.back_to_list'), operators_location_zones_path(page: cookies[:location_zone_page_number]), {class: "btn blck-btn"} %>
  </div>
  <%= show_body do %>
    <div class="box">
      <div class="box-body table-responsive no-padding">
        <div class="m30">
          <div class="align-left"><%= t('activerecord.attributes.location_zone.name') %> :</div>
          <div class="col-data"><%= @location_zone.name %></div>
        </div>
        <div class="m30">
          <div class="align-left"><%= t('activerecord.attributes.location_zone.queue') %> :</div>
          <div class="col-data"><%= @location_zone.queue %></div>
        </div>
        <div class="m30">
          <div class="align-left"></div>
          <div id="map"></div>
        </div>
      </div>
    </div>
  <% end %>
</div>
<script type="text/javascript" charset="utf-8">
    $(function () {
        initMap();
    });

    function initMap() {
        let point = [];
        point[0] = new google.maps.LatLng(<%= @location_zone.lat_l_t %>, <%= @location_zone.lng_l_t %>);
        point[1] = new google.maps.LatLng(<%= @location_zone.lat_l_b %>, <%= @location_zone.lng_l_b %>);
        point[2] = new google.maps.LatLng(<%= @location_zone.lat_r_b %>, <%= @location_zone.lng_r_b %>);
        point[3] = new google.maps.LatLng(<%= @location_zone.lat_r_t %>, <%= @location_zone.lng_r_t %>);

        let center_point = new google.maps.LatLng(<%= (@location_zone.lat_l_t + @location_zone.lat_l_b) / 2 %>, <%= (@location_zone.lng_l_t + @location_zone.lng_r_b) / 2 %>);
        const mapOptions = {
            center: center_point,
            zoom: 15,
            mapTypeId: 'hybrid',
            output: 'embed'
        };
        const map = new google.maps.Map(document.getElementById('map'), mapOptions);
        for (let i = 0; i < 4; i++) {
            new google.maps.Marker({
                position: point[i],
                map: map,
            });
        }
        let flightPath = new google.maps.Polyline({
            path: [point[0], point[1], point[2], point[3], point[0]],
            geodesic: true,
            strokeColor: "#FF0000",
            strokeOpacity: 1.0,
            strokeWeight: 2,
        });
        flightPath.setMap(map);

        <% zones = LocationZone.not_id(@location_zone.id)
         if zones.present? %>
        <% zones.each { |zone| %>
        new google.maps.Polyline({
            path: [{lat: <%= zone.lat_l_t %>, lng: <%= zone.lng_l_t %>},
                {lat: <%= zone.lat_l_b %>, lng: <%= zone.lng_l_b %>},
                {lat: <%= zone.lat_r_b %>, lng: <%= zone.lng_r_b %>},
                {lat: <%= zone.lat_r_t %>, lng: <%= zone.lng_r_t %>},
                {lat: <%= zone.lat_l_t %>, lng: <%= zone.lng_l_t %>}],
            geodesic: true,
            strokeColor: generateRandomColor(),
            strokeOpacity: 1.0,
            strokeWeight: 2,
            map: map,
        });
        <% }
         end %>
    }

    function generateRandomColor() {
        var letters = '0123456789ABCDEF';
        var color = '#';
        for (let i = 0; i < 6; i++) {
            color += letters[Math.floor(Math.random() * 16)];
        }
        return color;
    }
</script>