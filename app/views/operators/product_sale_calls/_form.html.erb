<% content_for :stylesheets do -%>
  <%= stylesheet_link_tag "form" %>
<% end %>

<div class="content-wrapper">
  <section class="content-header">
    <h1><%= t('activerecord.models.product_sale_call') + t(@sale_call.persisted? ? 'titles.edit' : 'titles.add') %></h1>
  </section>

  <section class="content">
    <div class="box box-info">
      <%= form_with model: @sale_call, url: @sale_call.persisted? ? operators_product_sale_call_path : '/operator/product_sale_calls',
                    method: :patch, local: true, :html => {class: 'form-horizontal', id: 'form_call'} do |f| %>
        <%= form_body do %>
          <%= f.hidden_field :id %>
          <%= f.hidden_field :source, value: 'sr_operator' %>
          <%= f.hidden_field :is_web %>
          <div class="form-group">
            <%= f.label :phone, class: 'col-sm-3 control-label' %>
            <div id="phone" class="col-sm-6 <%= get_error_class(@sale_call, :phone) %>">
              <small class="text-danger none" id="order_has_already"><%= t('alert.order_has_already') %></small>
              <%= field_errors(@sale_call, :phone) %>
              <%= f.text_field :phone, class: 'form-control', placeholder: t('activerecord.attributes.product_sale_call.phone') %>
            </div>
            <div class="col-sm-3">
              <button id="show_history" type="button" class="btn-default btn"><%= t('titles.show_history') %></button>
            </div>
          </div>
          <div class="col-md-12 field_div" style="margin-bottom: 12px">
            <div class="cocoon-nested-form">
              <div class="<%= get_error_class(@sale_call, :product_call_items) %>">
                <%= field_errors(@sale_call, :product_call_items) %>
                <table class="table table-bordered" id="tb_product_call_items">
                  <tr>
                    <th><%= t('activerecord.attributes.product_feature_item.image') %></th>
                    <th><%= t('activerecord.attributes.product.n_name') %></th>
                    <th><%= t('activerecord.attributes.product_call_item.feature_item_id') %></th>
                    <th><%= t('activerecord.attributes.product_call_item.quantity') %></th>
                    <th><%= t('activerecord.attributes.product_sale_item.price') %></th>
                    <th><%= t('activerecord.attributes.product_sale_item.sum_price') %></th>
                    <th><%= t('activerecord.attributes.product_sale_item.remainder') %></th>
                    <th>Харилцагчийн агуулах</th>
                    <th>Ажиллах хуваарь</th>
                    <th width="50px">
                      <%= link_to_add_association f, :product_call_items, data: {association_insertion_node: '#tb_product_call_items', association_insertion_method: :append} do %>
                        <%= nested_add_btn('btn_product_call_item') %>
                      <% end %>
                    </th>
                  </tr>
                  <%= f.fields_for :product_call_items do |m| %>
                    <%= render 'product_call_item_fields', :f => m %>
                  <% end %>
                </table>
              </div>
            </div>
          </div>
          <div class="form-group" style="margin-top: 8px">
            <%= f.label :sum_price, class: 'col-sm-3 control-label' %>
            <div class="col-sm-6">
              <%= f.hidden_field :sum_price %>
              <%= text_field_tag :sum_price, @sale_call.sum_price.present? ? get_currency_mn(@sale_call.sum_price) : nil, {class: 'form-control field', readonly: true, placeholder: t('activerecord.attributes.product_sale.sum_price')} %>
            </div>
          </div>
          <div class="form-group">
            <%= f.label :status_id, class: 'col-sm-3 control-label' %>
            <div class="col-sm-6 <%= get_error_class(@sale_call, :status_id) %>">
              <%= field_errors(@sale_call, :status_id) %>
              <%= f.hidden_field :status_id %>
              <%= f.collection_select :status_m, ProductSaleStatus.by_previous.skip_id(1).by_type('call'), :id, :name,
                                      {:include_blank => t('controls.select.none')}, {class: 'form-control selectpicker', onchange: 'call_next_status(this)'} %>
            </div>
          </div>
          <div id="div_status_sub" class="form-group <%= @sale_call.status_sub.present? ? '' : 'none' %>">
            <%= f.label :status_sub_id, class: 'col-sm-3 control-label' do %>
            <% end %>
            <div class="col-sm-6 <%= get_error_class(@sale_call, :status_sub) %>">
              <%= field_errors(@sale_call, :status_sub) %>
              <%= f.collection_select :status_sub, ProductSaleStatus.by_previous(@sale_call.status_m).by_type('call'), :id, :name,
                                      {:include_blank => t('controls.select.none')}, {class: 'form-control selectpicker', onchange: 'call_set_status(this)'} %>
            </div>
          </div>
          <div class="form-group" id="status_message">
            <%= f.label :message, class: 'col-sm-3 control-label' %>
            <div class="col-sm-6 <%= get_error_class(@sale_call, :message) %>">
              <%= field_errors(@sale_call, :message) %>
              <%= f.text_area :message, class: 'form-control', placeholder: t('activerecord.attributes.product_sale_call.message') %>
            </div>
          </div>

          <div class="action-buttons">
            <%= f.submit t('controls.button.save'), class: 'btn btn-warning' %>
          </div>
          <% if @sale_call.product_sale_status_logs.present? %>
            <div class="col-md-12 group_div m-t-20">
              <div class="col-md-12 field_div">
                <b><%= t('activerecord.attributes.product_sale.product_sale_status_logs') %></b>
              </div>
              <div style="clear: both"></div>
              <div class="col-md-12 field_div">
                <table class="table table-bordered" style="background: white;">
                  <thead>
                  <tr>
                    <th><%= t('activerecord.attributes.product_sale_status_log.created_at') %></th>
                    <th><%= t('activerecord.attributes.product_sale_status_log.operator_id') %></th>
                    <th><%= t('activerecord.attributes.product_sale_status_log.status_id') %></th>
                    <th><%= t('activerecord.attributes.product_sale_status_log.note') %></th>
                  </tr>
                  </thead>
                  <tbody>
                  <% @sale_call.product_sale_status_logs.each do |p| %>
                    <tr>
                      <td class="va-mid"><%= p.created_at.strftime('%F %R') %></td>
                      <td class="va-mid"><%= p.operator.operator_name %></td>
                      <td class="va-mid"><%= p.status.present? ? p.status.name_with_parent : "Сонгоогүй" %></td>
                      <td class="va-mid"><%= p.note %></td>
                    </tr>
                  <% end %>
                  </tbody>
                </table>
              </div>
            </div>
          <% end %>
        <% end %>
      <% end %>
    </div>
  </section>
</div>
<%= render 'shared/suggestion_search' %>
<%= render 'previous_sales' %>
<%= render 'shared/product_status_js', select_id: 'product_sale_call_status_id' %>
<script>
    $(document).ready(function () {
        <% unless @sale_call.status_sub.present?%>
        call_next_status($('#product_sale_call_status_m'));
        <% end %>
        $('#form_call').on('submit', function () {
            if ($('#product_sale_call_phone').val().length === 0) {
                alert("<%= t('alert.enter_phone_number') %>");
                return false;
            } else {
                return true;
            }
        });
        $('tr.nested-fields .selectpicker').selectpicker('refresh');

        $('#tb_product_call_items .nested-fields select').each(function () {
            select_input_press($(this), "<%= search_product_path %>", false);
        });
        $('#btn_product_call_item').on('click', function () {
            setTimeout(set_product_call_item, 300);
        });

        $('#product_sale_call_phone').keyup(function () {
            let phone = $(this).val();
            if (!isNaN(parseInt(phone)) && phone.length === 8) {
                auto_save(phone, $('#product_sale_call_status_id').val(), true);
                check_sale_order(phone);
            }
        });
        $('#show_history').on('click', function () {
            let phone = $('#product_sale_call_phone').val();
            if (!isNaN(parseInt(phone)) && phone.length === 8) {
                previous_sale(phone);
            }
        });
    });

    function set_product_call_item() {
        let last_tr = "#tb_product_call_items .nested-fields:last";
        $(last_tr).find('.selectpicker').selectpicker('refresh');
        select_input_press($(last_tr + ' select:first'), "<%= search_product_path %>", false);
    }

    function reset_input_vals(tr) {
        $("#total_price").val("");
        tr.find("input.item_sum").val("");
        tr.find("input.item_price").val("");
    }

    function func_change_product(select) {
        let product_id = $(select).val();
        let parentTr = select_parent(select);
        parentTr.find("select.feature_item").html("").selectpicker("refresh");
        reset_input_vals(parentTr);
        if (valid_id(product_id)) {
            Rails.ajax({
                url: "<%= get_product_features_path %>",
                type: "PATCH",
                data: "product_id=" + product_id,
                success: function (data) {
                    var features = data.features;
                    if (features !== undefined && features.length > 0) {
                        var divSelect = "<option value=''>Сонгох</option>";
                        var first_feature_id = 0;
                        for (var i = 0; i < features.length; i++) {
                            if (i === 0) {
                                first_feature_id = features[i]["id"];
                            }
                            divSelect += '<option value="' + features[i]["id"] + '" data-subtext="' + features[i]["balance"] + '" product="' + features[i]["product"] + '" >' + features[i]["name"] + '</option>';
                        }
                        let select = parentTr.find("select.feature_item");
                        select.html(divSelect);
                        if (features.length === 1) {
                            select.val(first_feature_id);
                            func_change_feature(select);
                        }
                        select.selectpicker("refresh");
                    }
                    parentTr.find('.image').html("<a href='<%= ENV['WEB_DOMAIN'] %>products/" + product_id + "' target='_blank'> <img src='" + data.tumb + "', class='tumb'></a>");
                    parentTr.find("input.item_price").attr('price', data.price).val(getDecimalPay(data.price));

                    calc_total_price();
                },
                error: function (data) {
                    console.log(data);
                }
            });
        }
    }

    function func_change_feature(select) {
        let product_id = $(select).find('option:selected').attr("product");
        let parentTr = select_parent(select);
        reset_input_vals(parentTr);

        let feature_id = $(select).val();
        if (valid_id(feature_id) && valid_id(product_id)) {
            Rails.ajax({
                url: "<%= get_product_balance_operators_product_sales_path %>",
                type: "POST",
                data: "product_id=" + product_id + "&feature_item_id=" + feature_id + "&date=<%= (@sale_call.persisted? ? @sale_call.created_at : Time.current).strftime('%F') %>",
                success: function (data) {
                    parentTr.find("input.item_price").val(data.price);
                    parentTr.find("input.item_price_show").val(getDecimalPay(data.price));
                    parentTr.find('.remainder').val(data.balance);
                    parentTr.find('.image a').html("<img src='" + data.tumb + "', class='tumb'>");
                    parentTr.find("td.warehouse").text(data.warehouse);
                    parentTr.find("td.working_hours").text(data.working_hours);

                    calc_total_price();
                },
                error: function (data) {
                    console.log(data);
                }
            });
        }
    }

    function calc_total_price() {
        var total_price = 0;
        $('#tb_product_call_items tr.nested-fields').each(function () {
            let tr = $(this);
            let quantity = tr.find('.item_quantity').val();
            if (quantity !== undefined && quantity.length > 0) {
                let price = tr.find('.item_price').val();
                let sum_price = price * parseInt(quantity);
                tr.find('.item_sum').val(sum_price);
                tr.find('.item_sum_show').val(getDecimalPay(sum_price));
                total_price += sum_price;
            }
        });
        $('#product_sale_call_sum_price').val(total_price);
        $('#sum_price').val(getDecimalPay(total_price));
    }

    function auto_save(phone, status, call_prev) {
        <% unless  @sale_call.persisted? %>
        Rails.ajax({
            url: "<%= auto_save_operators_product_sale_calls_path %>",
            type: "POST",
            data: "id=" + $('#product_sale_call_id').val() + "&phone=" + phone + "&status_id=" + status,
            success: function (data) {
                if (data.id > 0) {
                    $('#form_call').attr('action', '/operator/product_sale_calls/' + data.id);
                    $('#product_sale_call_id').val(data.id);
                    if (call_prev) {
                        previous_sale(phone);
                    }
                }
            }
        });
        <% end %>
    }

    function previous_sale(phone) {
        Rails.ajax({
            url: "<%= get_prev_sales_operators_product_sale_calls_path %>",
            type: "POST",
            data: "phone=" + phone + "&id=" + $('#product_sale_call_id').val()
        });
    }

    function check_sale_order(phone) {
        Rails.ajax({
            url: "<%= check_sale_order_operators_product_sale_calls_path %>",
            type: "POST",
            data: "phone=" + phone,
            success: function (data) {
                if (data.is_ordered === true) {
                    $('#phone').addClass('has-error');
                    $('#order_has_already').removeClass('none');
                }
            }
        });
    }
</script>