<style>
  .timepicker-picker a {
    color: #337ab7;
    text-decoration: none;
  }

  .cocoon-nested-form .links a {
    float: left !important;
  }

  .group_div {
    background: #f5f5f5;
    border: 1px solid lightgray;
    padding: 10px;
  }

  .field_div {
    padding: 10px;
  }

  .field_div input, .field_div textarea {
    font-size: small;
  }

  .field_div input, .field_div .dropdown-toggle {
    font-size: small;
    height: 30px;
  }
</style>
<div class="content-wrapper">
  <section class="content-header">
    <h1><%= t('activerecord.models.product_sale') + t(@product_sale.persisted? ? 'titles.edit' : 'titles.add') %></h1>
  </section>

  <section class="content">
    <div class="box box-info">
      <%= form_with model: @product_sale, url: @product_sale.persisted? ? operators_product_sale_path : operators_product_sales_path,
                    method: @product_sale.persisted? ? :patch : :post, local: true, :html => {class: 'form-horizontal'} do |f| %>
        <%= form_body do %>
          <div class="col-md-12 p-0">
            <div class="col-md-4 field_div">
              <%= f.label :code, class: 'control-label' %> <span class="asterisk">*</span>
              <div class="<%= get_error_class(@product_sale, :code) %>">
                <%= field_errors(@product_sale, :code) %>
                <%= f.text_field :code, class: 'form-control', placeholder: t('activerecord.attributes.product_sale.code') %>
              </div>
            </div>
            <div class="col-md-4 field_div">
              <%= f.label :sale_date, class: 'control-label' %> <span class="asterisk">*</span>
              <div class="input-append date input-group <%= get_error_class(@product_sale, :sale_date) %>" id="datetimepicker1" style="padding: 0 !important;">
                <%= field_errors(@product_sale, :sale_date) %>
                <span class="form-control"><%= t("activerecord.attributes.product_sale.sale_date") %>...</span>
                <%= f.hidden_field :sale_date, value: @product_sale.sale_date.strftime('%F %H:%M') %>
                <%= f.hidden_field :sale_date_end, value: @product_sale.sale_date_end.strftime('%F %H:%M') %>
                <div class="input-group-addon add-on">
                  <i class="fa fa-calendar"></i>
                </div>
              </div>
            </div>
            <div style="clear: both"></div>

            <div class="col-md-4 field_div">
              <%= f.label :phone, class: 'control-label' %> <span class="asterisk">*</span>
              <div class="<%= get_error_class(@product_sale, :phone) %>">
                <%= field_errors(@product_sale, :phone) %>
                <%= f.number_field :phone, class: 'form-control', placeholder: t('activerecord.attributes.product_sale.phone') %>
              </div>
            </div>
            <div class="col-md-4 field_div">
              <%= f.label :location_id, class: 'control-label' %>
              <div class="<%= get_error_class(@product_sale, :location_id) %>">
                <%= field_errors(@product_sale, :location_id) %>
                <%= f.collection_select :location_id, Location.searchAll(), :id, :full_name,
                                        {:prompt => t('controls.select.none')}, {class: 'form-control selectpicker', "data-live-search": "true", "data-container": ".box-info"} %>
              </div>
            </div>
            <div style="clear: both"></div>

            <div class="col-md-4 field_div">
              <%= f.label :loc_note, class: 'control-label' %>
              <div class="<%= get_error_class(@product_sale, :loc_note) %>">
                <%= field_errors(@product_sale, :loc_note) %>
                <%= f.text_area :loc_note, class: 'form-control', placeholder: t('activerecord.attributes.product_sale.loc_note') %>
              </div>
            </div>
            <div class="col-md-4 field_div">
              <%= f.label :building_code, class: 'control-label' %>
              <div class="<%= get_error_class(@product_sale, :building_code) %>">
                <%= field_errors(@product_sale, :building_code) %>
                <%= f.text_field :building_code, class: 'form-control', placeholder: t('activerecord.attributes.product_sale.building_code') %>
              </div>
            </div>
            <div style="clear: both"></div>

            <div class="col-md-12 field_div">
              <%= f.label :product_sale_items, class: 'control-label' %>

              <div class="cocoon-nested-form">
                <%#= f.label :product_sale_items, class: 'col-sm-3 control-label' %>
                <div class="col-sm-11 p-0 <%= get_error_class(@product_sale, :product_sale_items) %>">
                  <%= field_errors(@product_sale, :product_sale_items) %>
                  <table class="table table-bordered" id="tb_product_sale_items">
                    <tr>
                      <th><%= t('activerecord.attributes.product_sale_item.product_id') %></th>
                      <th><%= t('activerecord.attributes.product_sale_item.product_feature_rel_id') %></th>
                      <th><%= t('activerecord.attributes.product_sale_item.quantity') %></th>
                      <th><%= t('activerecord.attributes.product_sale_item.price') %></th>
                      <th><%= t('activerecord.attributes.product_sale_item.sumPrice') %></th>
                      <!--                      <th ><%#= t('activerecord.attributes.product_sale_item.uld') %></th>-->
                      <!--                      <th ><%#= t('activerecord.attributes.product_sale_item.bonus') %></th>-->
                      <th width="50px"></th>
                    </tr>
                    <%= f.fields_for :product_sale_items do |m| %>
                      <%= render 'product_sale_item_fields', :f => m %>
                    <% end %>
                  </table>
                </div>
                <div class="links col-sm-1 pull-left">
                  <%= link_to_add_association f, :product_sale_items, data: {association_insertion_node: '#tb_product_sale_items', association_insertion_method: :append} do %>
                    <%= nested_add_btn %>
                  <% end %>
                </div>
              </div>
            </div>
            <div style="clear: both"></div>
            <div class="col-md-4 field_div">
              <%= f.label :sumPrice, class: 'control-label' %>
              <div class="">
                <%= f.number_field :sumPrice, value: @product_sale.persisted? ? @product_sale.sumPrice : 0,
                                   class: 'form-control', disabled: "true", placeholder: t('activerecord.attributes.product_sale.sumPrice') %>
              </div>
            </div>
            <div class="col-md-4 field_div">
              <%= f.label :payment_account, class: 'control-label' %>
              <div class="<%= get_error_class(@product_sale, :payment_account) %>">
                <%= field_errors(@product_sale, :payment_account) %>
                <%= f.number_field :payment_account, class: 'form-control', placeholder: t('activerecord.attributes.product_sale.payment_account') %>
              </div>
            </div>
            <div class="col-md-4 field_div">
              <%= f.label :payment_delivery, class: 'control-label' %>
              <div class="<%= get_error_class(@product_sale, :payment_delivery) %>">
                <%= field_errors(@product_sale, :payment_delivery) %>
                <%= f.number_field :payment_delivery, class: 'form-control', oninput: "func_input_change(this, 'delivery')", placeholder: t('activerecord.attributes.product_sale.payment_delivery') %>
              </div>
            </div>
            <div style="clear: both"></div>

            <div class="col-md-4 field_div">
              <%= f.label :status_id, class: 'control-label' %>
              <div class="<%= get_error_class(@product_sale, :status_id) %>">
                <%= field_errors(@product_sale, :status_id) %>
                <%= f.hidden_field :status_id %>

                <%= f.collection_select :main_status_id, ProductSaleStatus.search(nil, "operator"), :id, :name,
                                        {:prompt => t('controls.select.none'),
                                         :selected => (@product_sale.persisted? && @product_sale.status.present?) ? (@product_sale.status.parent.present? ? @product_sale.status.parent_id : @product_sale.status.id) : ''},
                                        {class: 'form-control selectpicker', onchange: 'callChildren(this)', "data-live-search": "true", "data-container": ".box-info"} %>
              </div>
            </div>
            <div class="col-md-4 field_div">
              <label class="control-label" for="product_sale_sub_status_id" style="margin-bottom: 15px;"></label>
              <div id="substatus">
                <% if @product_sale.persisted? && @product_sale.status.present? && @product_sale.status.parent.present? %>
                  <%= f.collection_select :sub_status_id, ProductSaleStatus.search(@product_sale.status.parent_id, "operator"), :id, :name,
                                          {:prompt => t('controls.select.none'),
                                           :selected => @product_sale.status.id},
                                          {class: 'form-control selectpicker', id: 'sub_status_id', onchange: 'set_status(this)', "data-container": ".box-info"} %>
                <% end %>
              </div>
            </div>

            <div style="clear: both"></div>
            <div class="col-md-4 field_div">
              <%= f.label :status_note, class: 'control-label' %>
              <div class="<%= get_error_class(@product_sale, :status_note) %>">
                <%= field_errors(@product_sale, :status_note) %>
                <%= f.text_area :status_note, class: 'form-control', placeholder: t('activerecord.attributes.product_sale.status_note') %>
              </div>
            </div>
          </div>

          <div class="action-buttons">
            <%= f.submit t('controls.button.save'), class: 'btn btn-warning' %>
          </div>
        <% end %>
      <% end %>
    </div>
  </section>
</div>

<script>
    $(function () {
        var startDate = $('input#product_sale_sale_date');
        var endDate = $('input#product_sale_sale_date_end');

        $('#datetimepicker1 span').html(startDate.val() + ' - ' + endDate.val().split(' ')[1]);

        $('.selectpicker').selectpicker('refresh');

        $('#datetimepicker1').daterangepicker({
            dateLimit: {
                'months': 0,
                'days': 1
            },
            timePicker24Hour: true,
            startDate: moment(startDate.val(), "YYYY-MM-DD HH:mm"),
            endDate: moment(endDate.val(), "YYYY-MM-DD HH:mm"),
            timePicker: true,
            locale: 'mn',
            format: "YYYY-MM-DD HH:mm"
        }, function (start, end, label) {
            $('#datetimepicker1 span').html(start.format('YYYY-MM-DD HH:mm') + ' - ' + end.format('HH:mm'));
            startDate.val(start.format('YYYY-MM-DD HH:mm'));
            endDate.val(end.format('YYYY-MM-DD HH:mm'));
        });
    });

    function func_change_price(select) {
        // var selectedOption = select
        // var element = $(select).find('option:selected');
        var price = $(select).find('option:selected').attr("price");
        var parentTr = $(select).parent().parent().parent();

        parentTr.find("input.item_price").val(price);
    }

    function func_call_feature_rel(select) {
        var product_id = $(select).val();
        var parentTr = $(select).parent().parent().parent();
        // feature_select = parentTr.find("select.feature-rel");

        if (product_id != undefined && product_id != null && product_id != "") {
            parentTr.find("select.feature_rel").html("");
            // alert(product_id);

            Rails.ajax({
                url: "<%= get_product_features_operators_product_sales_path %>",
                type: "PATCH",
                data: "product_id=" + product_id,
                success: function (data) {
                    var childrens = data.childrens;
                    if (childrens != undefined && childrens.length > 0) {
                        var divSelect = "<option value=''>Сонгох</option>";

                        for (var i = 0; i < childrens.length; i++) {
                            divSelect += '<option value="' + childrens[i]["id"] + '" price = "' + childrens[i]["price"] + '" >' + childrens[i]["name"] + '</option>';
                        }

                        parentTr.find("select.feature_rel").html(divSelect);
                    }
                    parentTr.find("input.item_price").val(data.price);

                    parentTr.find("select.feature_rel").selectpicker("refresh");
                },
                error: function (data) {
                    console.log(data);
                }
            });
        }
    }

    function set_status(select) {
        value = $(select).val();
        if (value != undefined && value != null && value != "")
            $("input#product_sale_status_id").val(value);
    }

    function callChildren(select) {
        var val = null;
        if (select != undefined && select != null) {
            val = $(select).val();
            if (val != "" && val != undefined && val != null) {

                $("input#product_sale_status_id").val(val);

                Rails.ajax({
                    url: "<%= get_sub_status_operators_product_sales_path %>",
                    type: "PATCH",
                    data: "parent_id=" + val,
                    success: function (data) {
                        var childrens = data.childrens;
                        if (childrens != undefined && childrens.length > 0) {
                            // $(select).prop("disabled", true);

                            var divSelect =
                                "<select name='sub_status_id' id=\"sub_status_id\" class='form-control' onchange='set_status(this)' data-container='.box-info'>" +
                                "<option value=''>Сонгох</option>";

                            for (var i = 0; i < childrens.length; i++) {
                                divSelect += '<option value="' + childrens[i]["id"] + '">' + childrens[i]["name"] + '</option>';
                            }
                            divSelect += "</select>";

                            $("#substatus").html(divSelect);

                            $("#sub_status_id").selectpicker("refresh");
                        } else {
                            $("#substatus").html("");
                        }

                    },
                    error: function (data) {
                        console.log(data);
                    }
                });
            } // val is undefined chek
        }// select is undefined check
    }

    function func_input_change(input, type) {
        value0 = $(input).val();
        value1 = 0;
        parentTr = $(input).parent().parent();
        if (!isNaN(parseFloat(value0))) {
            if (type == "quantity" || type == "price") {
                if (type == "quantity") {
                    value1 = parentTr.find("input.item_price").val();
                } else {
                    value1 = parentTr.find("input.item_quantity").val();
                }

                if (!isNaN(parseFloat(value1))) {
                    sum = parseFloat(value1) * parseFloat(value0);
                    parentTr.find("input.item_sum").val(sum);
                    func_calc_sum();
                }
            } else {
                func_calc_sum();
            }
        }
    }

    function func_calc_sum() {
        var sum = 0;

        $("#tb_product_sale_items tr td input.item_sum").each(function () {
            itemSum = $(this).val();
            if (!isNaN(parseFloat(itemSum))) sum += parseFloat(itemSum);
        })

        delivery = $("#product_sale_payment_delivery").val();
        if (!isNaN(parseFloat(delivery))) sum += parseFloat(delivery);

        $("#product_sale_sumPrice").val(sum);
    }
</script>