<style>
  .timepicker-picker a {
    color: #337ab7;
    text-decoration: none;
  }

  .select-time .bootstrap-select {
    display: inline-block;
    width: 60px !important;
  }
</style>
<% content_for :stylesheets do -%>
  <%= stylesheet_link_tag "form" %>
<% end %>

<% provide :head_tags do %>
  <script type="text/javascript"
          src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_MAP_KEY'] %>&libraries=places"></script>
<% end %>

<div class="content-wrapper">
  <section class="content-header">
    <h1><%= t('activerecord.models.product_sale') + t(@product_sale.persisted? ? 'titles.edit' : 'titles.add') %></h1>
  </section>

  <section class="content">
    <div class="box box-info">
      <%= form_with model: @product_sale, url: @product_sale.persisted? ? operators_product_sale_path : operators_product_sales_path,
                    method: @product_sale.persisted? ? :patch : :post, local: true, :html => {class: 'form-horizontal'} do |f| %>
        <%= f.hidden_field :status_user_type %>
        <%= form_body do %>
          <div class="col-md-12 p-0">
            <div class="row">
              <div class="col-md-12">
                <div class="col-md-8">
                  <div class="row">
                    <div class="col-md-6 field_div">
                      <%= f.label :phone, class: 'control-label' %>
                      <div class="<%= get_error_class(@product_sale, :phone) %>">
                        <%= field_errors(@product_sale, :phone) %>
                        <%= f.number_field :phone, class: 'form-control', placeholder: t('activerecord.attributes.product_sale.phone') %>
                      </div>
                    </div>
                    <div class="col-md-3 field_div">
                      <%= f.label :delivery_start, class: 'control-label' %> <span class="asterisk">*</span>
                      <div class="input-append date input-group date <%= get_error_class(@product_sale, :delivery_start) %>" data-provide="datepicker" style="width: 180px">
                        <%= field_errors(@product_sale, :delivery_start) %>
                        <%= f.text_field :delivery_start, value: @product_sale.delivery_start.strftime('%F'), class: 'field form-control', placeholder: t('activerecord.attributes.product_sale.delivery_start') %>
                        <div class="input-group-addon">
                          <i class="fa fa-calendar"></i>
                        </div>
                      </div>
                    </div>
                    <div class="col-md-3 field_div select-time">
                      <%= f.label :delivery_end, class: 'control-label' %> <span class="asterisk">*</span>
                      <br>
                      <%= field_errors(@product_sale, :hour_end) %>
                      <%= f.select :hour_start, (@product_sale.delivery_end.present? ? 0 : @product_sale.hour_now.to_i)..23, {}, {class: 'form-control selectpicker'} %> &nbsp;-&nbsp;
                      <%= f.select :hour_end, (@product_sale.delivery_end.present? ? 0 : @product_sale.hour_now.to_i)..23, {}, {class: 'form-control selectpicker'} %>
                    </div>
                  </div>
                  <div class="row">
                    <div class="col-md-11 field_div">
                      <%= f.label :location_id, class: 'control-label' %>
                      <div class="<%= get_error_class(@product_sale, :location_id) %>">
                        <%= field_errors(@product_sale, :location_id) %>

                        <%= f.collection_select(:location_id, Location.search_by_id(@product_sale.location_id), :id, :full_name,
                                                {:prompt => t('controls.select.none')}, {class: 'form-control selectpicker', "data-live-search": "true"}) %>
                      </div>
                    </div>
                    <div class="col-md-1 field_div" style="padding-left: 0">
                      <%= render 'modal_location' %>
                    </div>
                  </div>

                  <div class="row">
                    <div class="col-md-6 field_div">
                      <%= f.label :loc_note, class: 'control-label' %>
                      <div class="<%= get_error_class(@product_sale, :loc_note) %>">
                        <%= field_errors(@product_sale, :loc_note) %>
                        <%= f.text_area :loc_note, class: 'form-control', placeholder: t('activerecord.attributes.product_sale.loc_note') %>
                      </div>
                    </div>
                    <div class="col-md-6 field_div">
                      <%= f.label :building_code, class: 'control-label' %>
                      <div class="<%= get_error_class(@product_sale, :building_code) %>">
                        <%= field_errors(@product_sale, :building_code) %>
                        <%= f.text_field :building_code, class: 'form-control', placeholder: t('activerecord.attributes.product_sale.building_code') %>
                      </div>
                    </div>
                  </div>
                </div>
                <div class="col-md-4" style="padding: 0">
                  <div id="selected_map" style="position:absolute;right: 0;width:100%;background-color: lightgrey;height: 218px"></div>
                </div>
              </div>
            </div>

            <div class="col-md-12 field_div">
              <%= f.label :product_sale_items, class: 'control-label' %>

              <div class="cocoon-nested-form">
                <div class="<%= get_error_class(@product_sale, :product_sale_items) %>">
                  <%= field_errors(@product_sale, :product_sale_items) %>
                  <table class="table table-bordered" id="tb_product_sale_items">
                    <tr>
                      <th><%= t('activerecord.attributes.product_feature_rel.image') %></th>
                      <th><%= t('activerecord.attributes.product_sale_item.product_id') %></th>
                      <th><%= t('activerecord.attributes.product_sale_item.product_feature_rel_id') %></th>
                      <th><%= t('activerecord.attributes.product_sale_item.quantity') %></th>
                      <th><%= t('activerecord.attributes.product_sale_item.price') %></th>
                      <th><%= t('activerecord.attributes.product_sale_item.sum_price') %></th>
                      <th><%= t('activerecord.attributes.product_sale_item.remainder') %></th>
                      <th width="50px"></th>
                    </tr>
                    <%= f.fields_for :product_sale_items do |m| %>
                      <%= render 'product_sale_item_fields', :f => m %>
                    <% end %>
                  </table>
                </div>
                <div class="links">
                  <%= link_to_add_association f, :product_sale_items, data: {association_insertion_node: '#tb_product_sale_items', association_insertion_method: :append} do %>
                    <%= nested_add_btn %>
                  <% end %>
                </div>
              </div>
            </div>
            <div class="row">
              <div class="col-md-12">
                <div class=" col-md-4 field_div">
                  <%= f.label :sum_price, class: 'control-label' %>
                  <div class="">
                    <%= f.text_field :sum_price, class: 'form-control', readonly: true, placeholder: t('activerecord.attributes.product_sale.sum_price') %>
                  </div>
                </div>
                <div class="col-md-4 field_div">
                  <%= f.label :money, class: 'control-label' %>
                  <div class="radio-group p-t-5 <%= get_error_class(@product_sale, :money) %>">
                    <%= field_errors(@product_sale, :money) %>
                    <%= f.collection_radio_buttons :money, ProductSale.money_i18n, :first, :second do |b| %>
                      <%= b.radio_button %>&nbsp;&nbsp;<%= b.text %> &nbsp;&nbsp;
                    <% end %>
                  </div>
                </div>
                <div class="col-md-4 field_div">
                  <%= f.label :bonus, class: 'control-label' %>
                  <div class="<%= get_error_class(@product_sale, :bonus) %>">
                    <%= field_errors(@product_sale, :bonus) %>
                    <%= f.number_field :bonus, class: 'form-control', oninput: "func_calc_sum()", placeholder: t('activerecord.attributes.product_sale.bonus') %>
                  </div>
                </div>
              </div>
            </div>
            <div class="row">
              <div class="col-md-12">

                <div class="col-md-4 field_div">
                  <%= f.label :main_status_id, class: 'control-label' %>
                  <div class="<%= get_error_class(@product_sale, :main_status_id) %>">
                    <%= field_errors(@product_sale, :main_status) %>
                    <%= f.collection_select :main_status_id, ProductSaleStatus.search(nil, @product_sale.status_user_type), :id, :name,
                                            {:prompt => t('controls.select.none')},
                                            {class: 'form-control selectpicker', onchange: 'callChildren(this)', "data-live-search": "true"} %>
                  </div>
                </div>
                <div class="col-md-4 field_div">
                  <label class="control-label" for="product_sale_status_id" style="margin-bottom: 15px"></label>
                  <div id="status" class="<%= get_error_class(@product_sale, :status_id) %>">
                    <%= field_errors(@product_sale, :status_id) %>
                    <% if (@product_sale.status.present? && @product_sale.status.id != @product_sale.main_status.id) ||
                        (@product_sale.main_status.present? && @product_sale.main_status.get_status_childs(@product_sale.status_user_type).count > 0) %>
                      <%= f.collection_select :status_id, ProductSaleStatus.search(@product_sale.main_status_id, @product_sale.status_user_type), :id, :name,
                                              {:prompt => t('controls.select.none')},
                                              {class: 'form-control selectpicker', id: 'status_id'} %>
                    <% end %>
                  </div>
                </div>

              </div>
            </div>
            <div class="row">
              <div class="col-md-12">
                <div class="col-md-4 field_div">
                  <%= f.label :status_note, class: 'control-label' %>
                  <div class="<%= get_error_class(@product_sale, :status_note) %>">
                    <%= field_errors(@product_sale, :status_note) %>
                    <%= f.text_area :status_note, class: 'form-control', placeholder: t('activerecord.attributes.product_sale.status_note') %>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <div class="action-buttons">
            <%= f.submit t('controls.button.save'), class: 'btn btn-warning' %>
          </div>
        <% end %>
      <% end %>
    </div>
  </section>
</div>
<%= render 'shared/suggestion_search', id: 'product_sale_location_id', url: search_locations_operators_product_sales_path %>
<script>
    function suggestion_search_enter(select) {
        func_call_feature_rel(select);
    }

    $(document).ready(function () {
        $('.selectpicker').selectpicker('refresh');

        $('#product_sale_location_id').on('change', function () {
            let id = $(this).val();
            if (valid_id(id)) {
                Rails.ajax({
                    url: "<%= get_location_operators_product_sales_path %>",
                    type: "POST",
                    data: "id=" + id,
                    success: function (data) {
                        selected_locatoion_refresh_marker(data.latitude, data.longitude);
                    },
                    error: function (data) {
                        console.log(data);
                    }
                });
            }
        });
        initSelectedMap();
    });


    function func_change_price(select) {
        let price = $(select).find('option:selected').attr("price");
        let product_id = $(select).find('option:selected').attr("product");
        let parentTr = select_parent(select);
        reset_input_vals(parentTr);
        parentTr.find("input.item_price").val(price);

        let feature_rel = $(select).val();
        if (valid_id(feature_rel) && valid_id(product_id)) {
            Rails.ajax({
                url: "<%= get_product_balance_operators_product_sales_path %>",
                type: "POST",
                data: "product_id=" + product_id + "&feature_rel_id=" + feature_rel,
                success: function (data) {
                    parentTr.find('.remainder').val(data.balance);
                    parentTr.find('.image').html("<a href='" + data.img + "' data-lightbox='roadtrip'> <img src='" + data.tumb + "', class='tumb'></a>");
                },
                error: function (data) {
                    console.log(data);
                }
            });
        }
    }

    function func_call_feature_rel(select) {
        let product_id = $(select).val();
        let parentTr = select_parent(select);
        parentTr.find("select.feature_rel").html("").selectpicker("refresh");
        reset_input_vals(parentTr);
        if (valid_id(product_id)) {
            // alert(product_id);

            Rails.ajax({
                url: "<%= get_product_features_operators_product_sales_path %>",
                type: "PATCH",
                data: "product_id=" + product_id,
                success: function (data) {
                    var childrens = data.childrens;
                    if (childrens != undefined && childrens.length > 0) {
                        var divSelect = "<option value=''>Сонгох</option>";

                        for (var i = 0; i < childrens.length; i++) {
                            divSelect += '<option value="' + childrens[i]["id"] + '" product="' + childrens[i]["product"] + '" price = "' + childrens[i]["price"] + '" >' + childrens[i]["name"] + '</option>';
                        }

                        parentTr.find("select.feature_rel").html(divSelect);
                    }
                    parentTr.find("input.item_price").val(data.price);

                    parentTr.find("select.feature_rel").selectpicker("refresh");
                },
                error: function (data) {
                    console.log(data);
                }
            });
        }
    }

    function callChildren(select) {
        let val = null;
        if (select !== undefined && select !== null) {
            val = $(select).val();
            if (valid_id(val)) {

                Rails.ajax({
                    url: "<%= get_sub_status_operators_product_sales_path %>",
                    type: "PATCH",
                    data: "parent_id=" + val + "&status_user_type=<%= @product_sale.status_user_type %>",
                    success: function (data) {
                        let childrens = data.childrens;
                        if (childrens !== undefined && childrens.length > 0) {
                            let divSelect =
                                "<select name='product_sale[status_id]' id=\"status_id\" class='form-control'>" +
                                "<option value=''>Сонгох</option>";

                            for (var i = 0; i < childrens.length; i++) {
                                divSelect += '<option value="' + childrens[i]["id"] + '">' + childrens[i]["name"] + '</option>';
                            }
                            divSelect += "</select>";

                            $("#status").html(divSelect);

                            $("#status_id").selectpicker("refresh");
                        } else {
                            $("#status").html("");
                        }

                    },
                    error: function (data) {
                        console.log(data);
                    }
                });
            } // val is undefined chek
        }// select is undefined check
    }

    function func_input_change(input, type) {
        var value0 = $(input).val();
        var value1 = 0;
        var parentTr = $(input).parent().hasClass('field_with_errors') ? $(input).parent().parent().parent() : $(input).parent().parent();
        if (!isNaN(parseFloat(value0))) {
            if (type === "quantity" || type === "price") {
                if (type === "quantity") {
                    value1 = parentTr.find("input.item_price").val();
                } else {
                    value1 = parentTr.find("input.item_quantity").val();
                }

                if (!isNaN(parseFloat(value1))) {
                    let sum = parseFloat(value1) * parseFloat(value0);
                    parentTr.find("input.item_sum").val(sum);
                    func_calc_sum();
                }
            } else {
                func_calc_sum();
            }
        }
    }

    function func_calc_sum() {
        var sum = 0;

        $("#tb_product_sale_items tr td input.item_sum").each(function () {
            let itemSum = $(this).val();
            if (!isNaN(parseFloat(itemSum))) sum += parseFloat(itemSum);
        });

        let bonus = $("#product_sale_bonus").val();
        if (!isNaN(parseFloat(bonus))) sum -= parseFloat(bonus);

        if (sum < 20000) {
            sum += 2000;
        }

        $("#product_sale_sum_price").val(sum);
    }

    function reset_input_vals(tr) {
        $("#product_sale_sum_price").val("");
        tr.find("input.item_quantity").val("");
        tr.find("input.item_sum").val("");
    }

    var selected_map = null, selected_marker;

    function initSelectedMap() {
        let lat = 47.918772;
        let lng = 106.917609;
        <% if @product_sale.location.present? %>
        lat = <%= @product_sale.location.latitude %>;
        lng = <%= @product_sale.location.longitude %>;
        <% end %>
        let myCoords = new google.maps.LatLng(lat, lng);
        let mapOptions = {
            center: myCoords,
            zoom: 15,
            mapTypeId: 'hybrid',
            output: 'embed',
            streetViewControl: false,
            mapTypeControl: false,
        };
        selected_map = new google.maps.Map(document.getElementById('selected_map'), mapOptions);
        selected_marker = new google.maps.Marker({
            position: myCoords,
            animation: google.maps.Animation.DROP,
            map: selected_map
        });
    }

    function selected_locatoion_refresh_marker(lat, lng) {
        let myCoords = new google.maps.LatLng(lat, lng);
        selected_marker.setPosition(myCoords);
        selected_map.setCenter(selected_marker.getPosition());
    }

</script>