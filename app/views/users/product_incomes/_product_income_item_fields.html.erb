<tr class="nested-fields">
  <td>
    <%= field_errors f.object, :supply_order_item_code %>
    <%= text_field_tag :supply_order_item_code, f.object.supply_order_item.present? ? f.object.supply_order_item.product_supply_order.code : '', class: 'form-control field', placeholder: t('activerecord.attributes.product_income_item.supply_order_item_code'), readonly: true %>
  </td>
  <td>
    <%= field_errors f.object, :supply_order_item_id %>
    <%= f.grouped_collection_select :supply_order_item_id, ProductSupplyOrder.searchNotClosed,
                                    :product_supply_order_items, :code_with_info,
                                    :id, :product_name_with_code,
                                    {:prompt => t('controls.select.none')},
                                    {class: 'form-control selectpicker', onchange: 'supply_order_item_changed(this)', "data-live-search": "true"} %>
  </td>
  <td>
    <%= field_errors f.object, :exchange %>
    <%= text_field_tag :exchange, f.object.supply_order_item.present? ? (f.object.supply_order_item.product_supply_order.exchange_i18n + ' ' + get_currency_mn(f.object.supply_order_item.product_supply_order.exchange_value)) : '', class: 'form-control field', placeholder: t('activerecord.attributes.product_income_item.supply_order_item_code'), readonly: true %>
  </td>
  <td>
    <%= field_errors f.object, :remainder %>
    <%= f.text_field :remainder, value: f.object.remainder.presence || f.object.get_balance, class: 'form-control p-2 field remainder', placeholder: t('activerecord.attributes.product_income_item.remainder'), readonly: true %>
  </td>
  <td>
    <%= field_errors f.object, :feature_rel_id %>
    <%= f.collection_select :feature_rel_id, ProductFeatureRel.search(f.object.supply_order_item.present? ? f.object.supply_order_item.product.id : nil), :id, :rel_names,
                            {:prompt => t('controls.select.none')}, {class: 'form-control selectpicker feature_rel', "data-live-search": "true"} %>
  </td>
  <td>
    <%= field_errors f.object, :quantity %>
    <%= f.number_field :quantity, class: 'form-control p-2 field', min: 0, step: 1, placeholder: t('activerecord.attributes.product_income_item.quantity') %>
  </td>
  <td>
    <%= field_errors f.object, :price %>
    <%= f.number_field :price, class: 'form-control p-2 field', min: 0, step: 0.1, placeholder: t('activerecord.attributes.product_income_item.price') %>
  </td>
  <td>
    <%= field_errors f.object, :shuudan %>
    <%= f.number_field :shuudan, class: 'form-control p-2 field', min: 0, step: 0.1, placeholder: t('activerecord.attributes.product_income_item.shuudan') %>
  </td>
  <td>
    <%= field_errors f.object, :urgent_type %>
    <%= f.select :urgent_type, ProductIncomeItem.urgent_types_i18n.keys.map {|k| [ProductIncomeItem.urgent_types_i18n[k], k]}, {:prompt => t('controls.select.none')}, {class: 'form-control selectpicker'} %>
  </td>
  <td>
    <div class="input-append input-group date" data-provide="datepicker">
      <%= field_errors f.object, :date %>
      <%= f.text_field :date, value: f.object.date.present? ? f.object.date.strftime('%F') : '', class: 'field form-control no-wrap', placeholder: t('activerecord.attributes.product_income_item.date') %>
      <div class="input-group-addon none">
        <i class="fa fa-calendar"></i>
      </div>
    </div>
  </td>
  <td>
    <%= field_errors f.object, :note %>
    <%= f.text_field :note, class: 'form-control field', placeholder: t('activerecord.attributes.product_income_item.note') %>
  </td>
  <td class="remove">
    <%= link_to_remove_association f, data: {confirm: t('are_you_sure')} do %>
      <%= nested_remove_btn %>
    <% end %>
  </td>
</tr>
<script>
    $(document).ready(function () {
        $('.selectpicker').selectpicker('refresh');

        $('.item_append #btn-append').click(function () {
            if ($('#tb_product_income_items tbody tr').length > 0) {
                let tr = $('#tb_product_income_items tbody tr:last');
                urgent_type = tr.find('td').eq(8).find('select').val();
                product_income_date = tr.find('td').eq(9).find('input').val();
                setTimeout(set_column_value, 200);
            }
        });

    });

    function set_column_value() {
        let tr = $('#tb_product_income_items tbody tr:last');
        tr.find('td').eq(8).find('select').val(urgent_type).selectpicker('refresh');
        tr.find('td').eq(9).find('input').val(product_income_date);
    }
</script>