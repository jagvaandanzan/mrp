<script type="text/javascript" charset="utf-8">
    function getColorByBgColor(id, bgColor) {
        var color = (bgColor.charAt(0) === '#') ? bgColor.substring(1, 7) : bgColor;
        var r = parseInt(color.substring(0, 2), 16); // hexToR
        var g = parseInt(color.substring(2, 4), 16); // hexToG
        var b = parseInt(color.substring(4, 6), 16); // hexToB
        $(id).css('color', (((r * 0.299) + (g * 0.587) + (b * 0.114)) > 186) ? '#000' : '#fff');
    }
</script>
<%= form_with model: product_supply, url: product_supply.persisted? ? users_product_supply_order_path : users_product_supply_orders_path,
              method: product_supply.persisted? ? :patch : :post, local: true, :html => {class: 'form-horizontal'} do |f| %>
  <%= form_body do %>
    <%= f.hidden_field :tab_index, {value: 0} %>
    <div class="row">
      <div class="col-md-3">
        <%= f.hidden_field :order_type, value: 'is_sample' %>
        <%= f.label :code, class: 'control-label' %>
        <div>
          <%= f.text_field :number, value: product_supply.code, class: 'form-control', placeholder: t('activerecord.attributes.product_supply_order.code'), readonly: true %>
        </div>
      </div>
      <div class="col-md-3">
        <%= f.label :ordered_date, class: 'control-label' %>
        <div class="input-append input-group date <%= get_error_class(product_supply, :ordered_date) %>" data-provide="datepicker">
          <%= field_errors(product_supply, :ordered_date) %>
          <%= f.text_field :ordered_date, value: product_supply.ordered_date.strftime('%F'), class: 'field form-control', placeholder: t('activerecord.attributes.product_supply_order.ordered_date') %>
          <div class="input-group-addon">
            <i class="fa fa-calendar"></i>
          </div>
        </div>
      </div>
      <div class="col-md-3 field_div">
        <%= f.label :logistic_id, class: 'control-label' %>
        <div class="<%= get_error_class(product_supply, :logistic_id) %>">
          <%= field_errors(product_supply, :logistic_id) %>
          <%= f.collection_select :logistic_id, Logistic.all, :id, :name, {}, {class: 'form-control'} %>
        </div>
      </div>
      <div class="col-md-3 field_div">
        <%= f.label :exchange, class: 'control-label' %>
        <div class="<%= get_error_class(product_supply, :exchange) %>">
          <%= field_errors(product_supply, :exchange) %>
          <%= f.select :exchange, ProductSupplyOrder.exchanges_i18n.keys.map {|k| [ProductSupplyOrder.exchanges_i18n[k], k]},
                       {}, {class: 'form-control'} %>
        </div>
      </div>
    </div>
    <div class="row">
      <div class="col-md-6">
        <%= f.label :product_name, class: 'control-label' %>
        <div class="<%= get_error_class(product_supply, :product_name) %>">
          <%= field_errors(product_supply, :product_name) %>
          <%= f.text_field :product_name, class: 'form-control', placeholder: t('activerecord.attributes.product_supply_order.product_name') %>
        </div>
      </div>
      <div class="col-md-6">
        <%= f.label :link, class: 'control-label' %>
        <div class="<%= get_error_class(product_supply, :link) %>">
          <%= field_errors(product_supply, :link) %>
          <%= f.text_field :link, class: 'form-control', placeholder: t('activerecord.attributes.product_supply_order.link') %>
        </div>
      </div>
    </div>
    <div class="row m-t-10">
      <div class="col-md-2">
        <%= f.label :product_sample_images, class: 'control-label' %>
      </div>
      <div class="cocoon-nested-form col-md-10">
        <div id="div_product_sample_images" class="<%= get_error_class(product_supply, :product_sample_images) %>">
          <%= field_errors(product_supply, :product_sample_images) %>
          <%= f.fields_for :product_sample_images do |m| %>
            <%= render 'product_sample_image_fields', :f => m %>
          <% end %>
          <div class="links">
            <%= link_to_add_association f, :product_sample_images, class: 'append-after' do %>
              <%= nested_add_btn %>
            <% end %>
          </div>
        </div>
      </div>
    </div>
    <div class="row">
      <div class="col-md-12 field_div m-t-20">
        <%= field_errors(product_supply, :product_feature_option_rels) %>
        <% ProductFeature.skip_no.order_by_queue.each {|feature| %>
          <% if feature.id == 2 %>
            <div class="form-group">
              <%= label_tag :product_feature_rel, class: 'col-sm-1 control-label' do %>
                <%= feature.name %>
              <% end %>
              <div class="col-sm-11">
                <% feature.options.order_queue.each {|option| %>
                  <div class="col-md-2">
                    <div class="checkbox" style="position: relative; display: block; overflow: hidden; height: 20px">
                      <%= label_tag do %>
                        <%= f.check_box(:option_rels, {:multiple => true}, option.id.to_s, nil) %>
                        <%= option.name %>
                      <% end %>
                    </div>
                  </div>
                <% } %>
              </div>
            </div>
          <% else %>
            <% ProductFeatureGroup.order_name.each_with_index {|gr, index| %>
              <div class="form-group">
                <%= label_tag :gr_rel, class: 'col-sm-1 control-label' do %>
                  <a data-toggle="collapse" data-parent="#accordion" href="#collapse<%= gr.id %>" style="color: black">
                    <%= gr.name %>
                  </a>
                <% end %>
                <div class="col-sm-11">
                  <div id="collapse<%= gr.id %>" class="panel-collapse collapse <%= (!product_supply.persisted? && index == 0 || (product_supply.persisted? && gr.check_option_selected(product_supply.option_rels))) ? 'in' : '' %>">
                    <% gr.product_feature_options.order_queue.each {|option| %>
                      <div class="col-md-2">
                        <div class="checkbox" style="position: relative; display: block; overflow: hidden; height: 34px;font-size: 11px">
                          <%= label_tag do %>
                            <%= f.check_box(:option_rels, {:multiple => true}, option.id.to_s, nil) %>
                            <% if option.code.present? %>
                              <span id="p-<%= option.id %>" style="background-color: <%= option.code %>"><%= option.name %></span>
                              <script>getColorByBgColor("#p-<%= option.id %>", "<%= option.code %>");</script>
                            <% else %>
                              <%= option.name %>
                            <% end %>
                          <% end %>
                        </div>
                      </div>
                    <% } %>
                  </div>
                </div>
              </div>
            <% } %>
          <% end %>
        <% } %>
      </div>
    </div>
    <div class="form-group">
      <%= f.label :description, class: 'col-sm-1 control-label' %>
      <div class="col-sm-11 <%= get_error_class(product_supply, :description) %>">
        <%= field_errors(product_supply, :description) %>
        <%= f.text_area :description, {class: 'form-control', placeholder: t('activerecord.attributes.product_supply_order.description')} %>
      </div>
    </div>

    <div class="row">
      <div class="action-buttons">
        <%= f.submit t('controls.button.save'), class: 'btn btn-warning' %>
      </div>
    </div>
  <% end %>
<% end %>