wb = xlsx_package.workbook

wb.add_worksheet(name: "Sheet1") do |sheet|

title = sheet.styles.add_style(
:b=>true,
:border=>Axlsx::STYLE_THIN_BORDER,
:alignment=>{:horizontal => :center,:vertical => :center, :wrap_text => true})

left = sheet.styles.add_style(
:border=>Axlsx::STYLE_THIN_BORDER,
:alignment=>{:horizontal => :left,:wrap_text => false})

right = sheet.styles.add_style(
:border=>Axlsx::STYLE_THIN_BORDER,
:alignment=>{:horizontal => :right})

default = sheet.styles.add_style(
:border=>Axlsx::STYLE_THIN_BORDER,
:alignment=>{:horizontal => :center, :vertical => :center})

none = sheet.styles.add_style(
{ :border => { :style => :thin, :color=> "000000", :edges => [:left, :right] },
:alignment=>{:horizontal => :center, :vertical => :center}})

below = sheet.styles.add_style(
{ :border => { :style => :thin, :color=> "000000", :edges => [:top, :left, :right] },
:alignment=>{:horizontal => :center, :vertical => :center}})

above = sheet.styles.add_style(
{ :border => { :style => :thin, :color=> "000000", :edges => [:top] }})


warning = sheet.styles.add_style(
:fg_color=>"f3640f",
:border=>Axlsx::STYLE_THIN_BORDER,
:alignment=>{:horizontal => :left, :vertical => :center})

sheet.add_row [
'',
'',
'',
'',
'',
'',
'Хүлээн авсан',
'',
'',
'Улаанбаатарлуу ачуулсан',
'',
'',
'',
'',
],:style=>title

sheet.merge_cells sheet.rows.last.cells[(0..5)]
sheet.merge_cells sheet.rows.last.cells[(6..8)]
sheet.merge_cells sheet.rows.last.cells[(9..11)]


# Create the header row
sheet.add_row [
t('activerecord.attributes.product_supply_order.code'),
t('activerecord.attributes.product_supply_order.order_type'),
t('activerecord.attributes.product_supply_order.product_code'),
t('activerecord.attributes.product_supply_order.product_name'),
t('activerecord.attributes.product_supply_feature.feature_item_id'),
t('activerecord.attributes.product_supply_order_item.purchase_quantity'),
t('activerecord.attributes.shipping_er_feature.quantity'),
t('activerecord.attributes.shipping_er_product.cargo'),
t('activerecord.attributes.shipping_er.date'),
t('activerecord.attributes.shipping_ub_product.quantity'),
t('activerecord.attributes.shipping_ub_product.cargo'),
t('activerecord.attributes.shipping_ub_product.cost'),
t('activerecord.attributes.product_supply_feature.sum_price'),
t('activerecord.attributes.shipping_ub.date'),
],:style=>title

pur_ids = @ub_products_x.pluck(:order_item_id)
order_ids = @ub_products_x.pluck("product_supply_order_items.product_supply_order_id")
product_ids = @ub_products_x.pluck(:product_id)

sheet.add_row [
t('activerecord.attributes.product_supply_feature.sum_price'),
t('activerecord.attributes.product_supply_order.ordered_date'),
t('activerecord.attributes.product_supply_order_item.cost'),
t('activerecord.attributes.product_supply_feature.price'),
t('activerecord.attributes.product_supply_feature.sum_price'),
ProductSupplyFeature.by_order_item(pur_ids).sum("product_supply_features.quantity_lo"),
ShippingErFeature.by_order_item(pur_ids).sum("shipping_er_features.quantity"),
ShippingErProduct.by_ship_id(@by_start, @by_end, order_ids).sum("shipping_er_products.cargo"),
'',
ShippingUbFeature.by_order_item(pur_ids).sum("shipping_ub_features.quantity"),
ShippingUbProduct.by_order_id(order_ids).pluck("shipping_ub_products.cargo").sum,
ShippingUbProduct.by_order_id(order_ids).pluck("shipping_ub_products.cost").sum,
ProductSupplyFeature.by_order_item(pur_ids).pluck(:sum_price_lo).sum,
''
],:style=>title

sheet.merge_cells sheet.rows.last.cells[(0..4)]

item = nil
code = 0
@ub_products_x.uniq(&:order_item_id).each do |i|
        order_items = i.order_item
        supply_order = order_items.product_supply_order
        count = 0
        product = order_items.product if order_items.present?
              feature_ids = []
              total_quantity = 0
              total_quantity_lo = 0
              total_price = 0
              date, costs, quantity, cargo, cost_text = order_items.present? ? order_items.shipping_er_feature : ''
              dateUB, costsUB, quantityUB, cargoUB, cost_textUB = order_items.present? ? order_items.shipping_ub_product : ''
              if order_items.present?
                if item != order_items.supply_features
                order_items.supply_features.each_with_index {|supply_feature, index|
                  feature_ids << supply_feature.id
                  total_quantity += supply_feature.quantity if supply_feature.quantity.present?
                  total_quantity_lo += supply_feature.quantity_lo if supply_feature.quantity_lo.present?
                  total_price += supply_feature.sum_price_lo
                  count += 1
                  var = i.code
                  sheet.add_row [
                  i.code,
                  supply_order.order_type_i18n,
                  product.present? ? product.code : i.id,
                  product.present? ? product.name : '',
                   supply_feature.feature_item.name,
                   supply_feature.quantity_lo,
                   supply_feature.shipping_er_features.quantity(supply_feature.id, order_items.id).present? ? supply_feature.shipping_er_features.quantity(supply_feature.id, order_items.id) : 0,
                   i.code == code ? '' : ShippingErProduct.by_order_id_item(@by_start, @by_end,supply_order.id).pluck(:cargo).sum,
                   date,
                   supply_feature.shipping_ub_features.quantity(supply_feature.id),
                   i.code == code ? '' : cargoUB,
                   i.code == code ? '' : costsUB,
                   supply_feature.sum_price_lo,
                   dateUB
                   ],style:[default,default,default,default,default,default,default,count > 1 ? i.code == var ? none : below : below,default,default,count > 1 ? i.code == var ? none : below : below,count > 1 ? i.code == var ? none : below : below,default,default,default]
                    item = order_items.supply_features
                    code = i.code
                    }
                end
           end
         end
         sheet.add_row [
             '','','','','','','','','','','',''
             ],:style=>above
end